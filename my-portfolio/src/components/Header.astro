---
import ThemeToggle from "./ThemeToggle.astro";
// Получаем текущий путь
const currentPath = Astro.url.pathname;

// Функция для определения активного пункта меню
const isActive = (path: string) => {
    if (path === "/" && currentPath === "/") return true;
    if (path !== "/" && currentPath.startsWith(path)) return true;
    return false;
};

// Массив пунктов меню для упрощения кода
const menuItems = [
    { path: "/", label: "Главная" },
    { path: "/projects", label: "Проекты" },
    { path: "https://app.defl-illusion.com", label: "MVP" },
    { path: "/contact", label: "Контакты" },
    { path: "/entertainment", label: "Развлечения" },
    { path: "/wishlist", label: "Доска желаний" },
    { path: "/about", label: "О нас" },
];
---

<script
    src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.5/flowbite.min.js"
></script>

<header>
    <nav
        class="bg-gray-800 border-gray-200 px-4 lg:px-6 py-2.5 dark:bg-gray-800"
    >
        <div
            class="flex items-center justify-between max-w-screen-xl mx-auto relative"
        >
            <div>
                <ThemeToggle />
            </div>

            <div
                class="hidden lg:flex lg:absolute lg:left-1/2 lg:-translate-x-1/2"
                id="desktop-menu"
            >
                <ul class="flex flex-row space-x-8">
                    {
                        menuItems.map(({ path, label }) => (
                            <li class="flex-1 text-center whitespace-nowrap">
                                <a
                                    class={`relative inline-block ${
                                        isActive(path)
                                            ? "text-white font-bold"
                                            : "text-gray-400 hover:text-primary-700 dark:text-gray-400 dark:hover:text-white "
                                    }`}
                                    aria-current={
                                        isActive(path) ? "page" : undefined
                                    }
                                    href={path}
                                >
                                    {label}
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </div>

            <button
                data-collapse-toggle="mobile-menu-2"
                type="button"
                class="inline-flex items-center p-2 text-sm text-gray-400 rounded-lg lg:hidden hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-600"
                aria-controls="mobile-menu-2"
                aria-expanded="false"
            >
                <span class="sr-only">Open main menu</span>
                <svg
                    class="w-6 h-6"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                    ><path
                        fill-rule="evenodd"
                        d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                        clip-rule="evenodd"></path></svg
                >
            </button>
        </div>

        <!-- Только мобильное меню -->
        <div class="hidden lg:hidden w-full" id="mobile-menu-2">
            <ul class="flex flex-col font-medium mt-4">
                {
                    menuItems.map(({ path, label }) => (
                        <li>
                            <a
                                class={`block py-2 pr-4 pl-3 border-b border-gray-700 ${
                                    isActive(path)
                                        ? "text-white bg-primary-700 font-bold"
                                        : "text-gray-400 hover:bg-gray-700 lg:hover:bg-transparent lg:border-0 lg:hover:text-primary-700 lg:p-0 dark:text-gray-400 lg:dark:hover:text-white dark:hover:bg-gray-700 dark:hover:text-white lg:dark:hover:bg-transparent"
                                }`}
                                aria-current={
                                    isActive(path) ? "page" : undefined
                                }
                                href={path}
                            >
                                {label}
                            </a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </nav>
</header>

<script>
    // Функция закрытия мобильного меню
    function closeMobileMenu() {
        const menu = document.getElementById("mobile-menu-2");
        const menuButton = document.querySelector(
            '[data-collapse-toggle="mobile-menu-2"]',
        );

        if (menu) {
            menu.classList.add("hidden");
            menuButton?.setAttribute("aria-expanded", "false");
        }
    }

    document.addEventListener("astro:page-load", () => {
        closeMobileMenu();
    });

    document.querySelectorAll("#mobile-menu-2 a").forEach((link) => {
        link.addEventListener("click", closeMobileMenu);
    });
</script>

<style>
    @media (max-width: 1023px) {
        nav {
            position: relative;
        }
        #mobile-menu-2 {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: #1f2937;
            z-index: 50;
        }
        #mobile-menu-2 ul {
            padding: 0.5rem 0;
        }
        #desktop-menu a {
            padding: 0.5rem 0;
        }
    }
    a[aria-current="page"] {
        position: relative;
    }

    a[aria-current="page"]::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: #6366f1;
    }
</style>
